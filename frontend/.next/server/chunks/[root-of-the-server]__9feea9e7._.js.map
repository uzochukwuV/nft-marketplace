{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/config/pinata.ts"],"sourcesContent":["\"server only\";\r\n\r\nimport { PinataSDK } from \"pinata\";\r\n\r\nexport const pinata = new PinataSDK({\r\n  pinataJwt: `${process.env.PINATA_JWT}`,\r\n  pinataGateway: `${process.env.NEXT_PUBLIC_GATEWAY_URL}`,\r\n});\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,MAAM,SAAS,IAAI,6LAAA,CAAA,YAAS,CAAC;IAClC,WAAW,GAAG,QAAQ,GAAG,CAAC,UAAU,EAAE;IACtC,eAAe,+EAAwC;AACzD","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/app/api/mint/route.ts"],"sourcesContent":["import { pinata } from \"@/config/pinata\";\r\nimport { type NextRequest, NextResponse } from \"next/server\";\r\n\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const data = await request.formData();\r\n    const name: string | undefined = data.get(\"name\")?.toString();\r\n   \r\n    const description: string | undefined = data.get(\"description\")?.toString();\r\n    if (!name || !description) {\r\n      throw new Error(`No name or description `);\r\n    }\r\n    const file: File | null = data.get(\"file\") as unknown as File;\r\n    const uploadData = await pinata.upload.public.file(file)\r\n\r\n    const url = await pinata.gateways.public.convert(uploadData?.cid);\r\n    const view = {\r\n      name: name,\r\n      description: description,\r\n      external_url:  data.get(\"video_url\")?.toString() || \"https://pinata.cloud\",\r\n      image_url: url,\r\n      logo: url,\r\n      owner: data.get(\"owner\")?.toString() || \"\",\r\n      media_type:  data.get(\"mediaType\")?.toString() || \"image\",\r\n      attributes:[\r\n        {\r\n          trait_type:\"owner\",\r\n          value: data.get(\"owner\")?.toString() || \"\",\r\n        }\r\n      ]\r\n    };\r\n\r\n    const uploadJson = await pinata.upload.public.json(view);\r\n    const jsonurl = await pinata.gateways.public.convert(uploadJson.cid);\r\n    return NextResponse.json({ url, jsonurl }, { status: 200 });\r\n  } catch (e) {\r\n    console.log(e);\r\n    return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,QAAQ;QACnC,MAAM,OAA2B,KAAK,GAAG,CAAC,SAAS;QAEnD,MAAM,cAAkC,KAAK,GAAG,CAAC,gBAAgB;QACjE,IAAI,CAAC,QAAQ,CAAC,aAAa;YACzB,MAAM,IAAI,MAAM,CAAC,uBAAuB,CAAC;QAC3C;QACA,MAAM,OAAoB,KAAK,GAAG,CAAC;QACnC,MAAM,aAAa,MAAM,kHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAEnD,MAAM,MAAM,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY;QAC7D,MAAM,OAAO;YACX,MAAM;YACN,aAAa;YACb,cAAe,KAAK,GAAG,CAAC,cAAc,cAAc;YACpD,WAAW;YACX,MAAM;YACN,OAAO,KAAK,GAAG,CAAC,UAAU,cAAc;YACxC,YAAa,KAAK,GAAG,CAAC,cAAc,cAAc;YAClD,YAAW;gBACT;oBACE,YAAW;oBACX,OAAO,KAAK,GAAG,CAAC,UAAU,cAAc;gBAC1C;aACD;QACH;QAEA,MAAM,aAAa,MAAM,kHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACnD,MAAM,UAAU,MAAM,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;QACnE,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;YAAK;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC3D,EAAE,OAAO,GAAG;QACV,QAAQ,GAAG,CAAC;QACZ,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}