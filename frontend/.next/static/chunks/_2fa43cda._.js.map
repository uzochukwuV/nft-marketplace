{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/components/nft-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { NFT } from '@/interface/nft'\r\nimport React, { Ref, RefObject, useRef, useState } from 'react'\r\n\r\nfunction NFTCard({ nft }: { nft: NFT }) {\r\n    const radioRef = useRef<HTMLInputElement | null>(null)\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <input type=\"radio\" hidden ref={radioRef} id={nft?.tokenId?.toString()} name='list_for_sale' data-value=\"nft-card\" value={nft?.tokenId} />\r\n            <div className=' invisible opacity-0 transition-all delay-75 duration-150 absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-20'>\r\n                <div className=\"h-full w-full flex justify-center items-center\">\r\n                    <div className=\"max-w-[500px] w-full h-[480px] bg-zinc-800 rounded-2xl\">\r\n                        <div className=' h-full w-full p-8 pt-4'>\r\n                            <div className=' flex justify-end'>\r\n                                <div onClick={() => {\r\n                                    radioRef.current!.checked = false;\r\n                                }}\r\n                                    className=' rounded-full bg-zinc-600 hover:bg-zinc-500'\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#fff\"><path d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\" /></svg>\r\n                                </div>\r\n                            </div>\r\n                            <div className=' h-1/2 my-2'>\r\n                            <video src={nft?.image} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n              \r\n                            </div>\r\n                            <div>\r\n                                <h3 className=' text-2xl font-semibold mb-4'>{nft?.name}</h3>\r\n                            </div>\r\n                            <form>\r\n                            <div className=\"mb-6\">\r\n                                <label htmlFor=\"price\" className=\"block mb-2 text-sm font-medium text-zinc-900 dark:text-white\">Input price of nft</label>\r\n                                <input type=\"number\" id=\"price\" name='price' placeholder='100' className=\" border border-zinc-300 text-zinc-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-3.5  dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500\" />\r\n                            </div>\r\n                            <button type=\"submit\" disabled={isLoading} className=\" border border-zinc-300 text-zinc-900 text-sm rounded-lg bg-indigo-500 focus:border-indigo-500 block w-full p-3.5  dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500\" >\r\n                                {\r\n                                    isLoading ? \"Processing....\" : \"Sell\"\r\n                                }\r\n                            </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=' h-[320px] max-w-[280px] flex flex-col p-2 border border-zinc-700 hover:shadow-md shadow-zinc-800 rounded-2xl bg-zinc-800'>\r\n                <div className='relative h-2/3 group '>\r\n                    <div className='group-hover:opacity-100 opacity-0 transition-all delay-75 duration-200  absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-10 flex justify-center items-center'>\r\n                        <label htmlFor={nft?.tokenId?.toString()} className=\" bg-[#6154f3] text-white rounded-xl px-4 py-2  \">List for sale</label>\r\n                    </div>\r\n                    <div className='absolute top-4 right-4 rounded-2xl z-10 bg-black'>\r\n                        <p className=' text-xs font-semibold '>{nft?.owner}</p>\r\n                    </div>\r\n                    <video src={nft?.image} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                </div>\r\n                <div className=' flex-1 py-2 space-y-1.5 '>\r\n                    <div className='text-sm'>\r\n                        <p>{nft?.name} #{nft?.tokenId}</p>\r\n                    </div>\r\n                    <div className=' '>\r\n                        <p className=' text-xs line-clamp-2 text-slate-200'>{nft?.description}</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NFTCard"],"names":[],"mappings":";;;;AAGA;;;AAHA;;AAKA,SAAS,QAAQ,EAAE,GAAG,EAAgB;;IAClC,MAAM,WAAW,CAAA,GAAA,4RAAA,CAAA,SAAM,AAAD,EAA2B;IACjD,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAW;IAElD,qBACI,4TAAC;;0BAEG,4TAAC;gBAAM,MAAK;gBAAQ,MAAM;gBAAC,KAAK;gBAAU,IAAI,KAAK,SAAS;gBAAY,MAAK;gBAAgB,cAAW;gBAAW,OAAO,KAAK;;;;;;0BAC/H,4TAAC;gBAAI,WAAU;0BACX,cAAA,4TAAC;oBAAI,WAAU;8BACX,cAAA,4TAAC;wBAAI,WAAU;kCACX,cAAA,4TAAC;4BAAI,WAAU;;8CACX,4TAAC;oCAAI,WAAU;8CACX,cAAA,4TAAC;wCAAI,SAAS;4CACV,SAAS,OAAO,CAAE,OAAO,GAAG;wCAChC;wCACI,WAAU;kDAEV,cAAA,4TAAC;4CAAI,OAAM;4CAA6B,QAAO;4CAAO,SAAQ;4CAAiB,OAAM;4CAAO,MAAK;sDAAO,cAAA,4TAAC;gDAAK,GAAE;;;;;;;;;;;;;;;;;;;;;8CAGxH,4TAAC;oCAAI,WAAU;8CACf,cAAA,4TAAC;wCAAM,KAAK,KAAK;wCAAO,WAAU;;;;;;;;;;;8CAGlC,4TAAC;8CACG,cAAA,4TAAC;wCAAG,WAAU;kDAAgC,KAAK;;;;;;;;;;;8CAEvD,4TAAC;;sDACD,4TAAC;4CAAI,WAAU;;8DACX,4TAAC;oDAAM,SAAQ;oDAAQ,WAAU;8DAA+D;;;;;;8DAChG,4TAAC;oDAAM,MAAK;oDAAS,IAAG;oDAAQ,MAAK;oDAAQ,aAAY;oDAAM,WAAU;;;;;;;;;;;;sDAE7E,4TAAC;4CAAO,MAAK;4CAAS,UAAU;4CAAW,WAAU;sDAE7C,YAAY,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQvD,4TAAC;gBAAI,WAAU;;kCACX,4TAAC;wBAAI,WAAU;;0CACX,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAM,SAAS,KAAK,SAAS;oCAAY,WAAU;8CAAkD;;;;;;;;;;;0CAE1G,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAE,WAAU;8CAA2B,KAAK;;;;;;;;;;;0CAEjD,4TAAC;gCAAM,KAAK,KAAK;gCAAO,WAAU;;;;;;;;;;;;kCAEtC,4TAAC;wBAAI,WAAU;;0CACX,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;;wCAAG,KAAK;wCAAK;wCAAG,KAAK;;;;;;;;;;;;0CAE1B,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAE,WAAU;8CAAwC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlF;GAjES;KAAA;uCAmEM","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/hooks/useReadContract.tsx"],"sourcesContent":["import { AbiCoder, Contract } from \"ethers\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport BaseMarketABI from \"@/abi/BaseMarket.json\"\r\nimport BaseCoinABI from \"@/abi/BaseNft.json\"\r\nimport BaseNftABI from \"@/abi/BaseNft.json\"\r\nimport { IWeb3Context, useWeb3Context } from \"@/context/web3Context\";\r\n\r\n\r\nconst coin = \"0x4b0243f5877cde3aff4a2bd32111505a8ffe55fa\"\r\nconst nft = \"0x30f6d11a066ec1343091b2dc108e6c3cd7faec10\"\r\nconst market = \"0x6543db3a145c3524c06a8a7cffdc45b5798da681\"\r\n\r\ninterface ContractNames {\r\n    contracts: \"BaseMarket\" | \"BaseCoin\" | \"BaseNft\"\r\n}\r\n\r\nconst useContract = ({ contracts }: ContractNames) => {\r\n    const { state } = useWeb3Context() as IWeb3Context;\r\n    const ContractABI = contracts == \"BaseMarket\" ? BaseMarketABI : contracts == \"BaseCoin\" ? BaseCoinABI : BaseNftABI;\r\n    const address = contracts == \"BaseMarket\" ? market : contracts == \"BaseCoin\" ? coin : nft;\r\n    return useMemo(\r\n        () => state.signer && new Contract(address, ContractABI[\"abi\"], state.signer),\r\n        [state.signer]\r\n    );\r\n};\r\n\r\nexport default useContract;\r\n\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;AAGA,MAAM,OAAO;AACb,MAAM,MAAM;AACZ,MAAM,SAAS;AAMf,MAAM,cAAc,CAAC,EAAE,SAAS,EAAiB;;IAC7C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IAC/B,MAAM,cAAc,aAAa,eAAe,yFAAA,CAAA,UAAa,GAAG,aAAa,aAAa,sFAAA,CAAA,UAAW,GAAG,sFAAA,CAAA,UAAU;IAClH,MAAM,UAAU,aAAa,eAAe,SAAS,aAAa,aAAa,OAAO;IACtF,OAAO,CAAA,GAAA,4RAAA,CAAA,UAAO,AAAD;+BACT,IAAM,MAAM,MAAM,IAAI,IAAI,mNAAA,CAAA,WAAQ,CAAC,SAAS,WAAW,CAAC,MAAM,EAAE,MAAM,MAAM;8BAC5E;QAAC,MAAM,MAAM;KAAC;AAEtB;GARM;;QACgB,0HAAA,CAAA,iBAAc;;;uCASrB","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/app/market/assets/page.tsx"],"sourcesContent":["\"use client\"\r\nimport NFTCard from '@/components/nft-card';\r\nimport { IWeb3Context, useWeb3Context } from '@/context/web3Context';\r\nimport useContract from '@/hooks/useReadContract';\r\nimport { NFT } from '@/interface/nft';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nfunction Assets() {\r\n    const { state } = useWeb3Context() as IWeb3Context;\r\n    const contract = useContract({ contracts: \"BaseNft\" });\r\n    const [nfts, setNfts] = useState<NFT[]>()\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        getNfts()\r\n    }, [])\r\n\r\n    const getNfts = async ()=>{\r\n        setLoading(true)\r\n        const filter = contract?.filters.Transfer(null, state.address);\r\n        const block = await contract?.deploymentTransaction()?.getBlock()\r\n        const events = await contract?.queryFilter(filter!,block?.number,  \"latest\")\r\n\r\n        console.log(events)\r\n        const tokenIDs = new Set();\r\n\r\n        for (const event of events!){\r\n            const {from, to, tokenId} = event?.args as any;\r\n            tokenIDs.add(tokenId)\r\n        }\r\n\r\n        console.log(tokenIDs)\r\n        const verifiedOwned = [];\r\n        for (const id of tokenIDs){\r\n            try {\r\n                const currentOwner = await contract?.ownerOf(id);\r\n                console.log(currentOwner)\r\n                if(currentOwner.toLowerCase() == state.address?.toLowerCase()){\r\n                    verifiedOwned.push(id);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.warn(\"Failed to verify nft\")\r\n            }\r\n        }\r\n        console.log(verifiedOwned);\r\n\r\n        // fetch ipfs data\r\n        const nftData = await Promise.all(\r\n            Array.from(verifiedOwned).map(async (tokenId)=>{\r\n                try {\r\n                    let tokenUri = await contract?.tokenURI(tokenId);\r\n                    if(tokenUri == \"\"){\r\n                        return {}\r\n                    }\r\n                    const res = fetch(tokenUri);\r\n                    const data = await (await res).json();\r\n                    console.log(data)\r\n                    return {\r\n                        tokenId,\r\n                        ...data\r\n                    }\r\n                } catch (error) {\r\n                   console.error(error) \r\n                }\r\n            })\r\n        )\r\n\r\n        setNfts(nftData)\r\n        setLoading(false);\r\n    }\r\n    \r\n  return (\r\n    <section className=' px-16 py-16'>\r\n        <div className=' grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5'>\r\n        {\r\n            nfts?.map((nft)=>\r\n                <NFTCard nft={nft} />\r\n            )\r\n        }\r\n    </div> \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Assets"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;;;AALA;;;;;AAOA,SAAS;;IACL,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IAC/B,MAAM,WAAW,CAAA,GAAA,4HAAA,CAAA,UAAW,AAAD,EAAE;QAAE,WAAW;IAAU;IACpD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;4BAAE;YAEN;QACJ;2BAAG,EAAE;IAEL,MAAM,UAAU;QACZ,WAAW;QACX,MAAM,SAAS,UAAU,QAAQ,SAAS,MAAM,MAAM,OAAO;QAC7D,MAAM,QAAQ,MAAM,UAAU,yBAAyB;QACvD,MAAM,SAAS,MAAM,UAAU,YAAY,QAAQ,OAAO,QAAS;QAEnE,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,IAAI;QAErB,KAAK,MAAM,SAAS,OAAQ;YACxB,MAAM,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAC,GAAG,OAAO;YACnC,SAAS,GAAG,CAAC;QACjB;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,gBAAgB,EAAE;QACxB,KAAK,MAAM,MAAM,SAAS;YACtB,IAAI;gBACA,MAAM,eAAe,MAAM,UAAU,QAAQ;gBAC7C,QAAQ,GAAG,CAAC;gBACZ,IAAG,aAAa,WAAW,MAAM,MAAM,OAAO,EAAE,eAAc;oBAC1D,cAAc,IAAI,CAAC;gBACvB;YAEJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,IAAI,CAAC;YACjB;QACJ;QACA,QAAQ,GAAG,CAAC;QAEZ,kBAAkB;QAClB,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC7B,MAAM,IAAI,CAAC,eAAe,GAAG,CAAC,OAAO;YACjC,IAAI;gBACA,IAAI,WAAW,MAAM,UAAU,SAAS;gBACxC,IAAG,YAAY,IAAG;oBACd,OAAO,CAAC;gBACZ;gBACA,MAAM,MAAM,MAAM;gBAClB,MAAM,OAAO,MAAM,CAAC,MAAM,GAAG,EAAE,IAAI;gBACnC,QAAQ,GAAG,CAAC;gBACZ,OAAO;oBACH;oBACA,GAAG,IAAI;gBACX;YACJ,EAAE,OAAO,OAAO;gBACb,QAAQ,KAAK,CAAC;YACjB;QACJ;QAGJ,QAAQ;QACR,WAAW;IACf;IAEF,qBACE,4TAAC;QAAQ,WAAU;kBACf,cAAA,4TAAC;YAAI,WAAU;sBAEX,MAAM,IAAI,CAAC,oBACP,4TAAC,6HAAA,CAAA,UAAO;oBAAC,KAAK;;;;;;;;;;;;;;;;AAM9B;GA7ES;;QACa,0HAAA,CAAA,iBAAc;QACf,4HAAA,CAAA,UAAW;;;KAFvB;uCA+EM","debugId":null}}]
}