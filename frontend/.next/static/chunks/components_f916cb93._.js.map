{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/components/nft-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { IWeb3Context, useWeb3Context } from '@/context/web3Context';\r\nimport useContract, { market } from '@/hooks/useReadContract';\r\nimport { NFT } from '@/interface/nft'\r\nimport { parseEther } from 'ethers';\r\nimport React, { Ref, RefObject, useRef, useState } from 'react'\r\n\r\nfunction NFTCard({ nft }: { nft: NFT }) {\r\n    const radioRef = useRef<HTMLInputElement | null>(null);\r\n    const { state } = useWeb3Context() as IWeb3Context;\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const [price, setPrice] = useState<number>()\r\n    const market_contract = useContract({ contracts: \"BaseMarket\" });\r\n    const nft_contract = useContract({ contracts: \"BaseNft\" });\r\n\r\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const nft_trx = await nft_contract?.approve(market, nft?.tokenId);\r\n            await nft_trx?.wait();\r\n            const transaction = await market_contract?.listNFT(nft?.tokenId, parseEther(price!.toString()));\r\n            await transaction.wait();\r\n            setPrice(0)\r\n            setLoading(false)\r\n            radioRef.current!.checked = false;\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        // e.currentTarget.reset()\r\n    }\r\n    console.log(nft)\r\n    return (\r\n        <div>\r\n\r\n            <input type=\"radio\" hidden ref={radioRef} id={nft?.tokenId?.toString()} name='list_for_sale' data-value=\"nft-card\" value={nft?.tokenId} />\r\n            <div className=' invisible opacity-0 transition-all delay-75 duration-150 absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-20'>\r\n                <div className=\"h-full w-full flex justify-center items-center\">\r\n                    <div className=\"max-w-[500px] w-full h-[500px] bg-zinc-800 rounded-2xl\">\r\n                        <div className=' h-full w-full p-4 pt-4'>\r\n                            <div className=' flex justify-end'>\r\n                                <div onClick={() => {\r\n                                    radioRef.current!.checked = false;\r\n                                }}\r\n                                    className=' rounded-full bg-zinc-600 hover:bg-zinc-500'\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#fff\"><path d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\" /></svg>\r\n                                </div>\r\n                            </div>\r\n                            <div className=' h-1/2 my-2'>\r\n                                {\r\n                                    nft?.media_type?.toLowerCase() == \"image\" ?\r\n                                        <img src={nft?.image_url} alt=\"\" className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                                        : <video src={nft?.image_url} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <h3 className=' text-2xl font-semibold mb-4'>{nft?.name}  #{nft?.tokenId}</h3>\r\n                            </div>\r\n                            <form>\r\n                                <div className=\"mb-6\">\r\n                                    <label htmlFor=\"price\" className=\"block mb-2 text-sm font-medium text-zinc-900 dark:text-white\">Input price of nft</label>\r\n                                    <input type=\"number\" id=\"price\" value={price} onChange={(e) => setPrice(Number(e.target.value))} name='price' placeholder='100' className=\" border border-zinc-300 text-zinc-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-3.5  dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500\" />\r\n                                </div>\r\n                                <button onClick={handleSubmit} type=\"button\" disabled={isLoading} className=\" border border-zinc-300 text-zinc-900 text-sm rounded-lg bg-indigo-500 focus:border-indigo-500 block w-full p-3.5  dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500\" >\r\n                                    {\r\n                                        isLoading ? \"Processing....\" : \"Sell\"\r\n                                    }\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=' h-[320px] md:max-w-[280px] flex flex-col p-2 border border-zinc-700 hover:shadow-md shadow-zinc-800 rounded-2xl bg-zinc-800'>\r\n                <div className='relative h-2/3 group '>\r\n                    <div className='group-hover:opacity-100 opacity-0 transition-all delay-75 duration-200  absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-10 flex justify-center items-center'>\r\n                        <label htmlFor={nft?.tokenId?.toString()} className=\" bg-[#6154f3] text-white rounded-xl px-4 py-2  \">List for sale</label>\r\n                    </div>\r\n                    <div className='absolute top-4 right-4 rounded-2xl z-10 bg-black'>\r\n                        <p className=' text-xs font-semibold '>{nft?.owner} </p>\r\n                    </div>\r\n                    {\r\n                        nft?.media_type?.toLowerCase() == \"image\"?\r\n                        <img src={nft?.image_url} alt=\"\" className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                        : <video src={nft?.image_url} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                    }\r\n                    </div>\r\n                <div className=' flex-1 py-2 space-y-1.5 '>\r\n                    <div className='text-sm'>\r\n                        <p>{nft?.name} #{nft?.tokenId}</p>\r\n                    </div>\r\n                    <div className=' '>\r\n                        <p className=' text-xs line-clamp-2 text-slate-200'>{nft?.description}</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport function NFTCardSeleton() {\r\n    return (\r\n        <div className='h-[320px] md:max-w-[280px] flex flex-col p-2 border border-zinc-700 hover:shadow-md shadow-zinc-800 rounded-2xl bg-zinc-800 animate-pulse'>\r\n            <div className='relative h-2/3 group bg-zinc-500 rounded-2xl'></div>\r\n            <div className='flex-1 py-2 flex justify-between flex-col'>\r\n                <div className='px-2 h-3 bg-zinc-600  w-1/2 py-2 rounded-2xl'></div>\r\n                <div className='px-2 h-3 bg-zinc-600  w-2/3 py-1 rounded-2xl'></div>\r\n                <div className='px-4  flex justify-between items-center py-4 bg-zinc-900 rounded-xl'>\r\n                    <div className='flex text-sm items-end justify-between w-full'>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NFTCard"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AACA;;;AANA;;;;;AAQA,SAAS,QAAQ,EAAE,GAAG,EAAgB;;IAClC,MAAM,WAAW,CAAA,GAAA,4RAAA,CAAA,SAAM,AAAD,EAA2B;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IAC/B,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAW;IAClD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,kBAAkB,CAAA,GAAA,4HAAA,CAAA,UAAW,AAAD,EAAE;QAAE,WAAW;IAAa;IAC9D,MAAM,eAAe,CAAA,GAAA,4HAAA,CAAA,UAAW,AAAD,EAAE;QAAE,WAAW;IAAU;IAExD,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,WAAW;QACX,IAAI;YACA,MAAM,UAAU,MAAM,cAAc,QAAQ,4HAAA,CAAA,SAAM,EAAE,KAAK;YACzD,MAAM,SAAS;YACf,MAAM,cAAc,MAAM,iBAAiB,QAAQ,KAAK,SAAS,CAAA,GAAA,6MAAA,CAAA,aAAU,AAAD,EAAE,MAAO,QAAQ;YAC3F,MAAM,YAAY,IAAI;YACtB,SAAS;YACT,WAAW;YACX,SAAS,OAAO,CAAE,OAAO,GAAG;QAChC,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;QAChB;IAEA,0BAA0B;IAC9B;IACA,QAAQ,GAAG,CAAC;IACZ,qBACI,4TAAC;;0BAEG,4TAAC;gBAAM,MAAK;gBAAQ,MAAM;gBAAC,KAAK;gBAAU,IAAI,KAAK,SAAS;gBAAY,MAAK;gBAAgB,cAAW;gBAAW,OAAO,KAAK;;;;;;0BAC/H,4TAAC;gBAAI,WAAU;0BACX,cAAA,4TAAC;oBAAI,WAAU;8BACX,cAAA,4TAAC;wBAAI,WAAU;kCACX,cAAA,4TAAC;4BAAI,WAAU;;8CACX,4TAAC;oCAAI,WAAU;8CACX,cAAA,4TAAC;wCAAI,SAAS;4CACV,SAAS,OAAO,CAAE,OAAO,GAAG;wCAChC;wCACI,WAAU;kDAEV,cAAA,4TAAC;4CAAI,OAAM;4CAA6B,QAAO;4CAAO,SAAQ;4CAAiB,OAAM;4CAAO,MAAK;sDAAO,cAAA,4TAAC;gDAAK,GAAE;;;;;;;;;;;;;;;;;;;;;8CAGxH,4TAAC;oCAAI,WAAU;8CAEP,KAAK,YAAY,iBAAiB,wBAC9B,4TAAC;wCAAI,KAAK,KAAK;wCAAW,KAAI;wCAAG,WAAU;;;;;6DACzC,4TAAC;wCAAM,KAAK,KAAK;wCAAW,WAAU;;;;;;;;;;;8CAGpD,4TAAC;8CACG,cAAA,4TAAC;wCAAG,WAAU;;4CAAgC,KAAK;4CAAK;4CAAI,KAAK;;;;;;;;;;;;8CAErE,4TAAC;;sDACG,4TAAC;4CAAI,WAAU;;8DACX,4TAAC;oDAAM,SAAQ;oDAAQ,WAAU;8DAA+D;;;;;;8DAChG,4TAAC;oDAAM,MAAK;oDAAS,IAAG;oDAAQ,OAAO;oDAAO,UAAU,CAAC,IAAM,SAAS,OAAO,EAAE,MAAM,CAAC,KAAK;oDAAI,MAAK;oDAAQ,aAAY;oDAAM,WAAU;;;;;;;;;;;;sDAE9I,4TAAC;4CAAO,SAAS;4CAAc,MAAK;4CAAS,UAAU;4CAAW,WAAU;sDAEpE,YAAY,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ3D,4TAAC;gBAAI,WAAU;;kCACX,4TAAC;wBAAI,WAAU;;0CACX,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAM,SAAS,KAAK,SAAS;oCAAY,WAAU;8CAAkD;;;;;;;;;;;0CAE1G,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAE,WAAU;;wCAA2B,KAAK;wCAAM;;;;;;;;;;;;4BAGnD,KAAK,YAAY,iBAAiB,wBAClC,4TAAC;gCAAI,KAAK,KAAK;gCAAW,KAAI;gCAAG,WAAU;;;;;qDACzC,4TAAC;gCAAM,KAAK,KAAK;gCAAW,WAAU;;;;;;;;;;;;kCAGhD,4TAAC;wBAAI,WAAU;;0CACX,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;;wCAAG,KAAK;wCAAK;wCAAG,KAAK;;;;;;;;;;;;0CAE1B,4TAAC;gCAAI,WAAU;0CACX,cAAA,4TAAC;oCAAE,WAAU;8CAAwC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlF;GA9FS;;QAEa,0HAAA,CAAA,iBAAc;QAGR,4HAAA,CAAA,UAAW;QACd,4HAAA,CAAA,UAAW;;;KAN3B;AAmGF,SAAS;IACZ,qBACI,4TAAC;QAAI,WAAU;;0BACX,4TAAC;gBAAI,WAAU;;;;;;0BACf,4TAAC;gBAAI,WAAU;;kCACX,4TAAC;wBAAI,WAAU;;;;;;kCACf,4TAAC;wBAAI,WAAU;;;;;;kCACf,4TAAC;wBAAI,WAAU;kCACX,cAAA,4TAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAOnC;MAfgB;uCAkBD","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/components/sale-card.tsx"],"sourcesContent":["\"use client\"\r\nimport { ListedNFT } from '@/interface/nft'\r\nimport { IWeb3Context, useWeb3Context } from '@/context/web3Context';\r\nimport useContract, { market } from '@/hooks/useReadContract';\r\nimport React, { useRef, useState } from 'react'\r\nimport { formatEther, parseEther } from 'ethers';\r\n\r\n\r\nexport default function SaleCard({nft}:{nft:ListedNFT}) {\r\n    const radioRef = useRef<HTMLInputElement | null>(null);\r\n    const { state } = useWeb3Context() as IWeb3Context;\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n   \r\n    const market_contract = useContract({ contracts: \"BaseMarket\" });\r\n    const coin_contract = useContract({ contracts: \"BaseCoin\" });\r\n\r\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const nft_trx = await coin_contract?.approve(market, parseEther(nft?.price!.toString()));\r\n            await nft_trx?.wait();\r\n            const transaction = await market_contract?.purchaseNFT(nft?.tokenId);\r\n            await transaction.wait();\r\n            \r\n            setLoading(false)\r\n            radioRef.current!.checked = false;\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        // e.currentTarget.reset()\r\n    }\r\n  return (\r\n    <div className=' '>\r\n        {/*  */}\r\n        <input type=\"radio\" hidden ref={radioRef} id={nft?.tokenId?.toString()} name='list_for_sale' data-value=\"nft-card\" value={nft?.tokenId} />\r\n            <div className=' invisible opacity-0 transition-all delay-75 duration-150 absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-20'>\r\n                <div className=\"h-full w-full flex justify-center items-center\">\r\n                    <div className=\"max-w-[500px] w-full h-[500px] bg-zinc-800 rounded-2xl\">\r\n                        <div className=' h-full w-full p-4 pt-4'>\r\n                            <div className=' flex justify-end'>\r\n                                <div onClick={() => {\r\n                                    radioRef.current!.checked = false;\r\n                                    setLoading(false)\r\n                                }}\r\n                                    className=' rounded-full bg-zinc-600 hover:bg-zinc-500'\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#fff\"><path d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\" /></svg>\r\n                                </div>\r\n                            </div>\r\n                            <div className=' h-1/2 my-2'>\r\n                                {\r\n                                    nft?.media_type?.toLowerCase() == \"image\" ?\r\n                                        <img src={nft?.image_url} alt=\"\" className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                                        : <video src={nft?.image_url} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <h3 className=' text-2xl font-semibold mb-4'>{nft?.name}  #{nft?.tokenId}</h3>\r\n                            </div>\r\n                            <form>\r\n                                <div className=\"mb-6 bg-zinc-900 py-4 px-4 rounded-2xl text-white\">\r\n                                    Price : <span className=' font-bold '>{nft?.price} BaseCoin</span>\r\n                                </div>\r\n                                <button onClick={handleSubmit} type=\"button\" disabled={isLoading} className=\" border border-zinc-300 text-zinc-900 text-sm rounded-lg bg-indigo-500 focus:border-indigo-500 block w-full p-3.5  dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500\" >\r\n                                    {\r\n                                        isLoading ? \"Processing....\" : \"Buy\"\r\n                                    }\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/*  */}\r\n        <div className=' h-[320px] md:max-w-[280px] flex flex-col p-2 border border-zinc-700 hover:shadow-md shadow-zinc-800 rounded-2xl bg-zinc-800'>\r\n                  <div className='relative h-2/3 group '>\r\n                    <div className='group-hover:opacity-100 opacity-0 transition-all delay-75 duration-200  absolute top-0 left-0 right-0 bottom-0 bg-black/20 z-10 flex justify-center items-center'>\r\n                    <label htmlFor={nft?.tokenId?.toString()} className=\" bg-[#6154f3] text-white rounded-xl px-4 py-2  \">Buy Now</label>\r\n                    </div>\r\n                    {\r\n                        nft?.media_type?.toLowerCase() == \"image\"?\r\n                        <img src={nft?.image_url} alt=\"\" className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                        : <video src={nft?.image_url} className=' relative block h-full rounded-2xl  w-full object-cover aspect-square' />\r\n                    }\r\n                  </div>\r\n                  <div className=' flex-1 py-2 flex justify-between  flex-col'>\r\n                      <div className='px-2 text-sm'>\r\n                        <p>{nft?.name}</p>\r\n                      </div>\r\n                      <div className=' px-4 py-1 flex justify-between items-center bg-zinc-900 rounded-xl'>\r\n                          <div className='flex text-sm ite space-y-0.5 flex-col'>\r\n                            <p className=' text-xs'>Sale</p>\r\n                            <p className=''>Active</p>\r\n                          </div>\r\n                          <div className='flex space-y-0.5 items-end flex-col'>\r\n                            <p className=' text-xs'>Price</p>\r\n                            <p className=''>{formatEther(nft?.price?.toString()!).slice(0, 6)}1 BC</p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS%20FX95G/Desktop/celusion/nft-marketplace/frontend/components/listed-assets.tsx"],"sourcesContent":["\"use client\"\r\nimport { IWeb3Context, useWeb3Context } from '@/context/web3Context';\r\nimport useContract from '@/hooks/useReadContract';\r\nimport { ListedNFT } from '@/interface/nft';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { NFTCardSeleton } from './nft-card';\r\nimport SaleCard from './sale-card';\r\n\r\nfunction ListedAssets() {\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const { state } = useWeb3Context() as IWeb3Context;\r\n    const market_contract = useContract({ contracts: \"BaseMarket\" });\r\n    const nft_contract = useContract({ contracts: \"BaseNft\" });\r\n    const [listedNfts, setListedNfts] = useState<ListedNFT[]|null>()\r\n\r\n    \r\n    useEffect(() => {\r\n        getListedNFts()\r\n    }, [])\r\n    const getListedNFts = async ()=>{\r\n        try {\r\n          setLoading(true)\r\n            const listedAssets = await market_contract?.getListedAssets(0, 10);\r\n            console.log(listedAssets)\r\n            \r\n            let allItems = [];\r\n            for (const item of listedAssets!){\r\n              console.log(item)\r\n              const [tokenId, price, owner] = item as any;\r\n              allItems.push({\r\n                tokenId,\r\n                price,\r\n                owner\r\n              })\r\n          }\r\n          console.log(allItems);\r\n\r\n          const nftData = await Promise.all(\r\n            Array.from(allItems).map(async (item)=>{\r\n                try {\r\n                    let tokenUri = await nft_contract?.tokenURI(item.tokenId);\r\n                    if(tokenUri == \"\"){\r\n                        return {\r\n                            ...item\r\n                        }\r\n                    }\r\n                    const res = fetch(tokenUri);\r\n                    const data = await (await res).json();\r\n                    console.log(data)\r\n                    return {\r\n                        ...data,\r\n                        ...item\r\n                    } as ListedNFT;\r\n                } catch (error) {\r\n                   console.error(error) \r\n                   return null\r\n                }\r\n            })\r\n        )\r\n\r\n        setListedNfts(nftData as any);\r\n        setLoading(false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <section className='grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5' >\r\n         {\r\n          isLoading ? [1,2,3,4,5].map((i)=>{\r\n            return <NFTCardSeleton key={i} />\r\n        }):\r\n        listedNfts?.map((nft)=>\r\n                <SaleCard key={nft?.tokenId} nft={nft} />\r\n            )\r\n         }\r\n         {\r\n            listedNfts?.length ==0 && <div>No Sales today Sorry</div>\r\n        }\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListedAssets"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;;;AANA;;;;;;AAQA,SAAS;;IACL,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAW;IAClD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IAC/B,MAAM,kBAAkB,CAAA,GAAA,4HAAA,CAAA,UAAW,AAAD,EAAE;QAAE,WAAW;IAAa;IAC9D,MAAM,eAAe,CAAA,GAAA,4HAAA,CAAA,UAAW,AAAD,EAAE;QAAE,WAAW;IAAU;IACxD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD;IAG3C,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;kCAAE;YACN;QACJ;iCAAG,EAAE;IACL,MAAM,gBAAgB;QAClB,IAAI;YACF,WAAW;YACT,MAAM,eAAe,MAAM,iBAAiB,gBAAgB,GAAG;YAC/D,QAAQ,GAAG,CAAC;YAEZ,IAAI,WAAW,EAAE;YACjB,KAAK,MAAM,QAAQ,aAAc;gBAC/B,QAAQ,GAAG,CAAC;gBACZ,MAAM,CAAC,SAAS,OAAO,MAAM,GAAG;gBAChC,SAAS,IAAI,CAAC;oBACZ;oBACA;oBACA;gBACF;YACJ;YACA,QAAQ,GAAG,CAAC;YAEZ,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,MAAM,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO;gBAC5B,IAAI;oBACA,IAAI,WAAW,MAAM,cAAc,SAAS,KAAK,OAAO;oBACxD,IAAG,YAAY,IAAG;wBACd,OAAO;4BACH,GAAG,IAAI;wBACX;oBACJ;oBACA,MAAM,MAAM,MAAM;oBAClB,MAAM,OAAO,MAAM,CAAC,MAAM,GAAG,EAAE,IAAI;oBACnC,QAAQ,GAAG,CAAC;oBACZ,OAAO;wBACH,GAAG,IAAI;wBACP,GAAG,IAAI;oBACX;gBACJ,EAAE,OAAO,OAAO;oBACb,QAAQ,KAAK,CAAC;oBACd,OAAO;gBACV;YACJ;YAGJ,cAAc;YACd,WAAW;QAEX,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;QAChB;IACJ;IACF,qBACE,4TAAC;kBACC,cAAA,4TAAC;YAAQ,WAAU;;gBAEf,YAAY;oBAAC;oBAAE;oBAAE;oBAAE;oBAAE;iBAAE,CAAC,GAAG,CAAC,CAAC;oBAC3B,qBAAO,4TAAC,6HAAA,CAAA,iBAAc,MAAM;;;;;gBAChC,KACA,YAAY,IAAI,CAAC,oBACT,4TAAC,8HAAA,CAAA,UAAQ;wBAAoB,KAAK;uBAAnB,KAAK;;;;;gBAIxB,YAAY,UAAS,mBAAK,4TAAC;8BAAI;;;;;;;;;;;;;;;;;AAK3C;GA5ES;;QAEa,0HAAA,CAAA,iBAAc;QACR,4HAAA,CAAA,UAAW;QACd,4HAAA,CAAA,UAAW;;;KAJ3B;uCA8EM","debugId":null}}]
}